AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template for CI/CD

Mappings:
  RegionEC2InstanceImageMap:
    us-east-1:
      HVM64: ami-0866a3c8686eaeeba
    us-east-2:
      HVM64: ami-0ea3c35c5c3284d82
    us-west-1:
      HVM64: ami-0da424eb883458071
    ap-south-1:
      HVM64: ami-0dee22c13ea7a9a67

Parameters:

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t3a.micro
      - t3.small
      - t3.medium

  InstanceTag:
    Type: String
    Description: Tag value for the EC2 instance.
    Default: Production

  ApplicationName:
    Type: String
    Default: ''
    Description: The name of the application

  GitHubRepo:
    Type: String
    Description: The name of the GitHub repository

  GitHubBranch:
    Type: String
    Default: main
    Description: The GitHub branch to use

  GitHubToken:
    Type: String
    Description: The GitHub personal access token
    NoEcho: true

  S3ArtifactBucket:
    Type: String
    Description: The S3 bucket where the artifacts will be stored

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where resources will be deployed

  SubnetIds:
    Description: Select private subnet for Codebuild
    Type: AWS::EC2::Subnet::Id
  
  SubnetIds2:
    Description: Select subnet for ec2 
    Type: AWS::EC2::Subnet::Id

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The security group

Resources:
  # Create the IAM Role to attach with ec2
  ec2CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeDeployRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                Resource: '*'

  # Create an Instance Profile for the EC2 instance
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ec2CodeDeployRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetIds2
      SecurityGroupIds:
        - !Ref SecurityGroupId
      ImageId: !FindInMap
        - RegionEC2InstanceImageMap
        - !Ref AWS::Region
        - HVM64
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update -y
          sudo apt install ruby -y
          sudo apt install wget -y

          sudo wget https://aws-codedeploy-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/latest/install
          sudo chmod +x ./install
          sudo ./install auto
      Tags:
        - Key: Environment
          Value: !Ref InstanceTag

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeBuildRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource: "*"

        - PolicyName: CodeBuildLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:log-stream:*
        - PolicyName: CodeBuildReportsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/test-build-*

        - PolicyName: CodeBuildSecurityGroupPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateNetworkInterface
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeVpcs
                  - ec2:DescribeInstances
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterfacePermission
                Resource: '*'

  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ApplicationName}-Build
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !GetAtt CodeBuildRole.Arn
      VpcConfig:
        VpcId: !Ref VpcId
        Subnets:
          - !Ref SubnetIds
        SecurityGroupIds:
          - !Ref SecurityGroupId

  # IAM Role for CodeDeploy
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeDeploy-Role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  # CodeDeploy Application
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      ComputePlatform: Server

  # CodeDeploy Deployment Group
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Sub ${ApplicationName}-DeploymentGroup
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      Ec2TagFilters:
        - Key: Environment
          Value: !Ref InstanceTag
          Type: KEY_AND_VALUE

  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
      Policies:
        - PolicyName: CodePipelineS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: "*"
        - PolicyName: CodePipelineBuildDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:StopBuild
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ApplicationName}-Build
              - Effect: Allow
                Action:
                  - codedeploy:RegisterApplicationRevision
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:CreateDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterOnPremisesInstance
                  - codedeploy:GetDeploymentGroup
                  - codedeploy:ListDeploymentGroups
                  - codedeploy:BatchGetDeploymentInstances
                Resource:
                  - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:${ApplicationName}
                  - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ApplicationName}/${ApplicationName}-DeploymentGroup
                  - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime

  # CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ApplicationName}-Pipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Select
                  - 0
                  - !Split
                    - /
                    - !Ref GitHubRepo
                Repo: !Select
                  - 1
                  - !Split
                    - /
                    - !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken

        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject

        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup

Outputs:
  CodePipelineName:
    Description: Name of the CodePipeline
    Value: !Ref CodePipeline